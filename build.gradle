plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'checkstyle'
    id 'jacoco'
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/naver-checkstyle-suppressions.xml"]
    toolVersion('10.3.1')
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

group = 'shop.sendbox'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation' // 추가: Bean Validation 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // ORM JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // RDBMS H2
    runtimeOnly 'com.h2database:h2'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// `jacocoTestCoverageVerification`을 `check` 태스크에서만 실행되도록 변경
tasks.named('check') {
    dependsOn jacocoTestCoverageVerification
}

//jacoco
jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true

            element = 'CLASS'

            includes = ['shop.sendbox.sendbox.*']
            excludes = [
                    'shop.sendbox.sendbox.SendboxApplication',
                    'shop.sendbox.sendbox.base.*',  // 베이스 엔티티 클래스 제외
                    'shop.sendbox.sendbox.security.config.*'  // 설정 클래스 제외
            ]

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }
        }
    }
}

